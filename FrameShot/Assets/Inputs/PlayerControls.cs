//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Inputs/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""NormalActions"",
            ""id"": ""b1c224a0-140b-47e3-9433-e8a69eb0ab63"",
            ""actions"": [
                {
                    ""name"": ""PlayerMove"",
                    ""type"": ""Value"",
                    ""id"": ""47cf19c6-8441-44eb-a8e2-2cbfa5fbf1cc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""b1d12252-297d-42c3-a20b-986962c2c8cf"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RestartLevel"",
                    ""type"": ""Button"",
                    ""id"": ""fadcbf10-95a4-4d55-ae87-59860bd6dc58"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""13315fc2-e0b1-4005-be17-9167da8ef3b7"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""efe1d1c2-6c24-4a73-bafa-b301523db73a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""733eb19e-70a5-46ac-b0d5-de1ac76bab1a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8eb1d9c2-4c33-4833-8709-b017ee3b33d4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4ea449d3-a4d0-49e6-a634-aa87dc1132af"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""584e7a80-d913-4256-869a-172031c13c13"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1d08084c-71e2-4626-b941-f042a5f98ec4"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ac9483a-525a-4014-bae3-b44f6b5beea2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fdedb08b-1913-4eb7-aa3c-228a7edd20a7"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""RestartLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7689e960-7789-41b4-ac2b-55a29b169e78"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""RestartLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""NormalActionsWithCamera"",
            ""id"": ""7ba0cdb8-f351-40cd-be3a-dc0040102a84"",
            ""actions"": [
                {
                    ""name"": ""PlayerMoveC"",
                    ""type"": ""Value"",
                    ""id"": ""8c8250ec-badf-4600-a97c-d5a110e6d758"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""JumpC"",
                    ""type"": ""Button"",
                    ""id"": ""8235926f-31d2-40e2-9cbc-d192f8057f19"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EnterScreenshotMode"",
                    ""type"": ""Button"",
                    ""id"": ""1af622f7-144c-49af-979e-eae9735b80eb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RestartC"",
                    ""type"": ""Button"",
                    ""id"": ""57903036-db5a-4427-bdfe-d7b0ff9d299c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""536a3960-c542-4f84-83cf-94479c4d12cd"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""PlayerMoveC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""74bb64ae-652c-446a-a9c9-4d9e3c5a2420"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMoveC"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e1cc6bad-78db-4549-a1e0-8f4a9657fcb2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""PlayerMoveC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c00369af-8336-4269-bcce-1a6ee110c585"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""PlayerMoveC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""553c822d-2024-4c4c-84fc-77c7fd2ecad7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""PlayerMoveC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fb0786a0-ec56-4d4d-bf2e-46162328d3b0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""PlayerMoveC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""941fb675-2d03-4ad5-88a6-0039333a152f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""JumpC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24e86f82-7bd7-4a9a-b3d8-fe2826cef9cc"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""JumpC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc3cafc9-c5ed-426d-bb48-28f1655b84ac"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""EnterScreenshotMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db00a59b-3369-48a9-94e2-9075e9559582"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""EnterScreenshotMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f0bdb21-4a0b-4b94-8c4c-969ca0754793"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""RestartC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""457abe82-e14d-4e35-bc05-7c1d0af0228f"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""RestartC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""SnapshotModeActions"",
            ""id"": ""10235a8a-5322-43b2-96ab-5d0a79c43244"",
            ""actions"": [
                {
                    ""name"": ""SnapshotActionButton"",
                    ""type"": ""Button"",
                    ""id"": ""d7993209-36f6-4b55-befb-01a563f53728"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SnapshotFrameMove"",
                    ""type"": ""Value"",
                    ""id"": ""a546a5b8-1c4c-41b4-a48e-be2a1d0db5a5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ExitScreenshotMode"",
                    ""type"": ""Button"",
                    ""id"": ""1b0548dd-b2ae-494d-813e-8b6a07c989b6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""14d70cae-bc64-4db1-8e5a-83073281b5a2"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": "";Gamepad"",
                    ""action"": ""SnapshotActionButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2fbfcf69-0f44-4b05-b65d-50e9a10f8bb6"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""SnapshotActionButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b59a6b9f-33ff-4c0e-a960-d83df2f51fd2"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""SnapshotFrameMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""8c3c9fdc-df9e-4c8b-921d-565cce5986e9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SnapshotFrameMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4192aa4e-dea6-471c-8730-8b98b292211e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""SnapshotFrameMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""90c1eda5-5a64-46bd-90d5-00604471e0e5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""SnapshotFrameMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""38c616e7-80b0-4f4e-9251-062a766ccc0c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""SnapshotFrameMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""dcd653e0-ceb3-4e37-a87c-0f5e4a0bc6c8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""SnapshotFrameMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""358b7db6-54a7-40ad-a8f8-08980db9b28f"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""ExitScreenshotMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8df00463-5ab2-4f25-ae6b-674bae8ee68c"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""ExitScreenshotMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""SnapshotModeActionsWithRotation"",
            ""id"": ""f79138f4-3f01-42da-ad2c-d42635121926"",
            ""actions"": [
                {
                    ""name"": ""SnapshotActionButton"",
                    ""type"": ""Button"",
                    ""id"": ""a77a51d5-1238-4d76-be88-5baa7df225b7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SnapshotFrameMove"",
                    ""type"": ""Value"",
                    ""id"": ""2ce2ff10-b948-4365-b4cc-ebee54e661d8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ExitScreenshotMode"",
                    ""type"": ""Button"",
                    ""id"": ""b3b99d46-0511-44b2-a6a6-460927e0424f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateLeft"",
                    ""type"": ""Button"",
                    ""id"": ""2a812c5e-4dcc-42bb-abe3-e6cb04897d30"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateRight"",
                    ""type"": ""Button"",
                    ""id"": ""2a886fea-24c8-4c10-989e-9a21780066fb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b7c39337-1c82-4546-8308-e6d45c886644"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": "";Gamepad"",
                    ""action"": ""SnapshotActionButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd5b7ddd-e55f-451f-b6f3-5ddf9e049e76"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""SnapshotActionButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0fdaddd9-68ce-428e-8b0a-8504fc6d808a"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""SnapshotFrameMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""5ff20f70-f106-456d-8605-570a5ce5dc81"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SnapshotFrameMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e12ebb9d-4e49-4669-8200-cf8f456898fe"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""SnapshotFrameMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3630423d-e45d-4b9b-84ad-160febdee40a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""SnapshotFrameMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""94b6db70-42fd-4f58-9ec0-71565ffa2912"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""SnapshotFrameMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""665e3d4c-6001-4ffb-aed7-0510d0fd309f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""SnapshotFrameMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4d3a51d4-970a-4b3e-94a9-1751a3543e31"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""ExitScreenshotMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10bf8be0-8d43-402d-a0f5-26a5a814b4f3"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""ExitScreenshotMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c760a4e-f818-4b76-a75e-dfb0c9fa82ee"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""RotateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ab316f9-38bf-4ec3-9f5e-0c470a58fd3c"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""RotateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95d67fd3-25b6-4efa-83d4-f50fcf2098a7"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""RotateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da3db4e1-1c0b-4179-8460-1e1391432aba"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""RotateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""28afcecd-1658-4d91-bde6-ae9245e47772"",
            ""actions"": [
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""1f8f4e56-be1d-4cb1-b728-eb0903330a42"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""eeec1891-2858-4739-91b9-8b703b9a08bf"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7605752e-af2d-4abd-bda1-63ee3e24fa28"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // NormalActions
        m_NormalActions = asset.FindActionMap("NormalActions", throwIfNotFound: true);
        m_NormalActions_PlayerMove = m_NormalActions.FindAction("PlayerMove", throwIfNotFound: true);
        m_NormalActions_Jump = m_NormalActions.FindAction("Jump", throwIfNotFound: true);
        m_NormalActions_RestartLevel = m_NormalActions.FindAction("RestartLevel", throwIfNotFound: true);
        // NormalActionsWithCamera
        m_NormalActionsWithCamera = asset.FindActionMap("NormalActionsWithCamera", throwIfNotFound: true);
        m_NormalActionsWithCamera_PlayerMoveC = m_NormalActionsWithCamera.FindAction("PlayerMoveC", throwIfNotFound: true);
        m_NormalActionsWithCamera_JumpC = m_NormalActionsWithCamera.FindAction("JumpC", throwIfNotFound: true);
        m_NormalActionsWithCamera_EnterScreenshotMode = m_NormalActionsWithCamera.FindAction("EnterScreenshotMode", throwIfNotFound: true);
        m_NormalActionsWithCamera_RestartC = m_NormalActionsWithCamera.FindAction("RestartC", throwIfNotFound: true);
        // SnapshotModeActions
        m_SnapshotModeActions = asset.FindActionMap("SnapshotModeActions", throwIfNotFound: true);
        m_SnapshotModeActions_SnapshotActionButton = m_SnapshotModeActions.FindAction("SnapshotActionButton", throwIfNotFound: true);
        m_SnapshotModeActions_SnapshotFrameMove = m_SnapshotModeActions.FindAction("SnapshotFrameMove", throwIfNotFound: true);
        m_SnapshotModeActions_ExitScreenshotMode = m_SnapshotModeActions.FindAction("ExitScreenshotMode", throwIfNotFound: true);
        // SnapshotModeActionsWithRotation
        m_SnapshotModeActionsWithRotation = asset.FindActionMap("SnapshotModeActionsWithRotation", throwIfNotFound: true);
        m_SnapshotModeActionsWithRotation_SnapshotActionButton = m_SnapshotModeActionsWithRotation.FindAction("SnapshotActionButton", throwIfNotFound: true);
        m_SnapshotModeActionsWithRotation_SnapshotFrameMove = m_SnapshotModeActionsWithRotation.FindAction("SnapshotFrameMove", throwIfNotFound: true);
        m_SnapshotModeActionsWithRotation_ExitScreenshotMode = m_SnapshotModeActionsWithRotation.FindAction("ExitScreenshotMode", throwIfNotFound: true);
        m_SnapshotModeActionsWithRotation_RotateLeft = m_SnapshotModeActionsWithRotation.FindAction("RotateLeft", throwIfNotFound: true);
        m_SnapshotModeActionsWithRotation_RotateRight = m_SnapshotModeActionsWithRotation.FindAction("RotateRight", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Start = m_UI.FindAction("Start", throwIfNotFound: true);
    }

    ~@PlayerControls()
    {
        UnityEngine.Debug.Assert(!m_NormalActions.enabled, "This will cause a leak and performance issues, PlayerControls.NormalActions.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_NormalActionsWithCamera.enabled, "This will cause a leak and performance issues, PlayerControls.NormalActionsWithCamera.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_SnapshotModeActions.enabled, "This will cause a leak and performance issues, PlayerControls.SnapshotModeActions.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_SnapshotModeActionsWithRotation.enabled, "This will cause a leak and performance issues, PlayerControls.SnapshotModeActionsWithRotation.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_UI.enabled, "This will cause a leak and performance issues, PlayerControls.UI.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // NormalActions
    private readonly InputActionMap m_NormalActions;
    private List<INormalActionsActions> m_NormalActionsActionsCallbackInterfaces = new List<INormalActionsActions>();
    private readonly InputAction m_NormalActions_PlayerMove;
    private readonly InputAction m_NormalActions_Jump;
    private readonly InputAction m_NormalActions_RestartLevel;
    public struct NormalActionsActions
    {
        private @PlayerControls m_Wrapper;
        public NormalActionsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayerMove => m_Wrapper.m_NormalActions_PlayerMove;
        public InputAction @Jump => m_Wrapper.m_NormalActions_Jump;
        public InputAction @RestartLevel => m_Wrapper.m_NormalActions_RestartLevel;
        public InputActionMap Get() { return m_Wrapper.m_NormalActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NormalActionsActions set) { return set.Get(); }
        public void AddCallbacks(INormalActionsActions instance)
        {
            if (instance == null || m_Wrapper.m_NormalActionsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_NormalActionsActionsCallbackInterfaces.Add(instance);
            @PlayerMove.started += instance.OnPlayerMove;
            @PlayerMove.performed += instance.OnPlayerMove;
            @PlayerMove.canceled += instance.OnPlayerMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @RestartLevel.started += instance.OnRestartLevel;
            @RestartLevel.performed += instance.OnRestartLevel;
            @RestartLevel.canceled += instance.OnRestartLevel;
        }

        private void UnregisterCallbacks(INormalActionsActions instance)
        {
            @PlayerMove.started -= instance.OnPlayerMove;
            @PlayerMove.performed -= instance.OnPlayerMove;
            @PlayerMove.canceled -= instance.OnPlayerMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @RestartLevel.started -= instance.OnRestartLevel;
            @RestartLevel.performed -= instance.OnRestartLevel;
            @RestartLevel.canceled -= instance.OnRestartLevel;
        }

        public void RemoveCallbacks(INormalActionsActions instance)
        {
            if (m_Wrapper.m_NormalActionsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(INormalActionsActions instance)
        {
            foreach (var item in m_Wrapper.m_NormalActionsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_NormalActionsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public NormalActionsActions @NormalActions => new NormalActionsActions(this);

    // NormalActionsWithCamera
    private readonly InputActionMap m_NormalActionsWithCamera;
    private List<INormalActionsWithCameraActions> m_NormalActionsWithCameraActionsCallbackInterfaces = new List<INormalActionsWithCameraActions>();
    private readonly InputAction m_NormalActionsWithCamera_PlayerMoveC;
    private readonly InputAction m_NormalActionsWithCamera_JumpC;
    private readonly InputAction m_NormalActionsWithCamera_EnterScreenshotMode;
    private readonly InputAction m_NormalActionsWithCamera_RestartC;
    public struct NormalActionsWithCameraActions
    {
        private @PlayerControls m_Wrapper;
        public NormalActionsWithCameraActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayerMoveC => m_Wrapper.m_NormalActionsWithCamera_PlayerMoveC;
        public InputAction @JumpC => m_Wrapper.m_NormalActionsWithCamera_JumpC;
        public InputAction @EnterScreenshotMode => m_Wrapper.m_NormalActionsWithCamera_EnterScreenshotMode;
        public InputAction @RestartC => m_Wrapper.m_NormalActionsWithCamera_RestartC;
        public InputActionMap Get() { return m_Wrapper.m_NormalActionsWithCamera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NormalActionsWithCameraActions set) { return set.Get(); }
        public void AddCallbacks(INormalActionsWithCameraActions instance)
        {
            if (instance == null || m_Wrapper.m_NormalActionsWithCameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_NormalActionsWithCameraActionsCallbackInterfaces.Add(instance);
            @PlayerMoveC.started += instance.OnPlayerMoveC;
            @PlayerMoveC.performed += instance.OnPlayerMoveC;
            @PlayerMoveC.canceled += instance.OnPlayerMoveC;
            @JumpC.started += instance.OnJumpC;
            @JumpC.performed += instance.OnJumpC;
            @JumpC.canceled += instance.OnJumpC;
            @EnterScreenshotMode.started += instance.OnEnterScreenshotMode;
            @EnterScreenshotMode.performed += instance.OnEnterScreenshotMode;
            @EnterScreenshotMode.canceled += instance.OnEnterScreenshotMode;
            @RestartC.started += instance.OnRestartC;
            @RestartC.performed += instance.OnRestartC;
            @RestartC.canceled += instance.OnRestartC;
        }

        private void UnregisterCallbacks(INormalActionsWithCameraActions instance)
        {
            @PlayerMoveC.started -= instance.OnPlayerMoveC;
            @PlayerMoveC.performed -= instance.OnPlayerMoveC;
            @PlayerMoveC.canceled -= instance.OnPlayerMoveC;
            @JumpC.started -= instance.OnJumpC;
            @JumpC.performed -= instance.OnJumpC;
            @JumpC.canceled -= instance.OnJumpC;
            @EnterScreenshotMode.started -= instance.OnEnterScreenshotMode;
            @EnterScreenshotMode.performed -= instance.OnEnterScreenshotMode;
            @EnterScreenshotMode.canceled -= instance.OnEnterScreenshotMode;
            @RestartC.started -= instance.OnRestartC;
            @RestartC.performed -= instance.OnRestartC;
            @RestartC.canceled -= instance.OnRestartC;
        }

        public void RemoveCallbacks(INormalActionsWithCameraActions instance)
        {
            if (m_Wrapper.m_NormalActionsWithCameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(INormalActionsWithCameraActions instance)
        {
            foreach (var item in m_Wrapper.m_NormalActionsWithCameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_NormalActionsWithCameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public NormalActionsWithCameraActions @NormalActionsWithCamera => new NormalActionsWithCameraActions(this);

    // SnapshotModeActions
    private readonly InputActionMap m_SnapshotModeActions;
    private List<ISnapshotModeActionsActions> m_SnapshotModeActionsActionsCallbackInterfaces = new List<ISnapshotModeActionsActions>();
    private readonly InputAction m_SnapshotModeActions_SnapshotActionButton;
    private readonly InputAction m_SnapshotModeActions_SnapshotFrameMove;
    private readonly InputAction m_SnapshotModeActions_ExitScreenshotMode;
    public struct SnapshotModeActionsActions
    {
        private @PlayerControls m_Wrapper;
        public SnapshotModeActionsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @SnapshotActionButton => m_Wrapper.m_SnapshotModeActions_SnapshotActionButton;
        public InputAction @SnapshotFrameMove => m_Wrapper.m_SnapshotModeActions_SnapshotFrameMove;
        public InputAction @ExitScreenshotMode => m_Wrapper.m_SnapshotModeActions_ExitScreenshotMode;
        public InputActionMap Get() { return m_Wrapper.m_SnapshotModeActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SnapshotModeActionsActions set) { return set.Get(); }
        public void AddCallbacks(ISnapshotModeActionsActions instance)
        {
            if (instance == null || m_Wrapper.m_SnapshotModeActionsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SnapshotModeActionsActionsCallbackInterfaces.Add(instance);
            @SnapshotActionButton.started += instance.OnSnapshotActionButton;
            @SnapshotActionButton.performed += instance.OnSnapshotActionButton;
            @SnapshotActionButton.canceled += instance.OnSnapshotActionButton;
            @SnapshotFrameMove.started += instance.OnSnapshotFrameMove;
            @SnapshotFrameMove.performed += instance.OnSnapshotFrameMove;
            @SnapshotFrameMove.canceled += instance.OnSnapshotFrameMove;
            @ExitScreenshotMode.started += instance.OnExitScreenshotMode;
            @ExitScreenshotMode.performed += instance.OnExitScreenshotMode;
            @ExitScreenshotMode.canceled += instance.OnExitScreenshotMode;
        }

        private void UnregisterCallbacks(ISnapshotModeActionsActions instance)
        {
            @SnapshotActionButton.started -= instance.OnSnapshotActionButton;
            @SnapshotActionButton.performed -= instance.OnSnapshotActionButton;
            @SnapshotActionButton.canceled -= instance.OnSnapshotActionButton;
            @SnapshotFrameMove.started -= instance.OnSnapshotFrameMove;
            @SnapshotFrameMove.performed -= instance.OnSnapshotFrameMove;
            @SnapshotFrameMove.canceled -= instance.OnSnapshotFrameMove;
            @ExitScreenshotMode.started -= instance.OnExitScreenshotMode;
            @ExitScreenshotMode.performed -= instance.OnExitScreenshotMode;
            @ExitScreenshotMode.canceled -= instance.OnExitScreenshotMode;
        }

        public void RemoveCallbacks(ISnapshotModeActionsActions instance)
        {
            if (m_Wrapper.m_SnapshotModeActionsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISnapshotModeActionsActions instance)
        {
            foreach (var item in m_Wrapper.m_SnapshotModeActionsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SnapshotModeActionsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SnapshotModeActionsActions @SnapshotModeActions => new SnapshotModeActionsActions(this);

    // SnapshotModeActionsWithRotation
    private readonly InputActionMap m_SnapshotModeActionsWithRotation;
    private List<ISnapshotModeActionsWithRotationActions> m_SnapshotModeActionsWithRotationActionsCallbackInterfaces = new List<ISnapshotModeActionsWithRotationActions>();
    private readonly InputAction m_SnapshotModeActionsWithRotation_SnapshotActionButton;
    private readonly InputAction m_SnapshotModeActionsWithRotation_SnapshotFrameMove;
    private readonly InputAction m_SnapshotModeActionsWithRotation_ExitScreenshotMode;
    private readonly InputAction m_SnapshotModeActionsWithRotation_RotateLeft;
    private readonly InputAction m_SnapshotModeActionsWithRotation_RotateRight;
    public struct SnapshotModeActionsWithRotationActions
    {
        private @PlayerControls m_Wrapper;
        public SnapshotModeActionsWithRotationActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @SnapshotActionButton => m_Wrapper.m_SnapshotModeActionsWithRotation_SnapshotActionButton;
        public InputAction @SnapshotFrameMove => m_Wrapper.m_SnapshotModeActionsWithRotation_SnapshotFrameMove;
        public InputAction @ExitScreenshotMode => m_Wrapper.m_SnapshotModeActionsWithRotation_ExitScreenshotMode;
        public InputAction @RotateLeft => m_Wrapper.m_SnapshotModeActionsWithRotation_RotateLeft;
        public InputAction @RotateRight => m_Wrapper.m_SnapshotModeActionsWithRotation_RotateRight;
        public InputActionMap Get() { return m_Wrapper.m_SnapshotModeActionsWithRotation; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SnapshotModeActionsWithRotationActions set) { return set.Get(); }
        public void AddCallbacks(ISnapshotModeActionsWithRotationActions instance)
        {
            if (instance == null || m_Wrapper.m_SnapshotModeActionsWithRotationActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SnapshotModeActionsWithRotationActionsCallbackInterfaces.Add(instance);
            @SnapshotActionButton.started += instance.OnSnapshotActionButton;
            @SnapshotActionButton.performed += instance.OnSnapshotActionButton;
            @SnapshotActionButton.canceled += instance.OnSnapshotActionButton;
            @SnapshotFrameMove.started += instance.OnSnapshotFrameMove;
            @SnapshotFrameMove.performed += instance.OnSnapshotFrameMove;
            @SnapshotFrameMove.canceled += instance.OnSnapshotFrameMove;
            @ExitScreenshotMode.started += instance.OnExitScreenshotMode;
            @ExitScreenshotMode.performed += instance.OnExitScreenshotMode;
            @ExitScreenshotMode.canceled += instance.OnExitScreenshotMode;
            @RotateLeft.started += instance.OnRotateLeft;
            @RotateLeft.performed += instance.OnRotateLeft;
            @RotateLeft.canceled += instance.OnRotateLeft;
            @RotateRight.started += instance.OnRotateRight;
            @RotateRight.performed += instance.OnRotateRight;
            @RotateRight.canceled += instance.OnRotateRight;
        }

        private void UnregisterCallbacks(ISnapshotModeActionsWithRotationActions instance)
        {
            @SnapshotActionButton.started -= instance.OnSnapshotActionButton;
            @SnapshotActionButton.performed -= instance.OnSnapshotActionButton;
            @SnapshotActionButton.canceled -= instance.OnSnapshotActionButton;
            @SnapshotFrameMove.started -= instance.OnSnapshotFrameMove;
            @SnapshotFrameMove.performed -= instance.OnSnapshotFrameMove;
            @SnapshotFrameMove.canceled -= instance.OnSnapshotFrameMove;
            @ExitScreenshotMode.started -= instance.OnExitScreenshotMode;
            @ExitScreenshotMode.performed -= instance.OnExitScreenshotMode;
            @ExitScreenshotMode.canceled -= instance.OnExitScreenshotMode;
            @RotateLeft.started -= instance.OnRotateLeft;
            @RotateLeft.performed -= instance.OnRotateLeft;
            @RotateLeft.canceled -= instance.OnRotateLeft;
            @RotateRight.started -= instance.OnRotateRight;
            @RotateRight.performed -= instance.OnRotateRight;
            @RotateRight.canceled -= instance.OnRotateRight;
        }

        public void RemoveCallbacks(ISnapshotModeActionsWithRotationActions instance)
        {
            if (m_Wrapper.m_SnapshotModeActionsWithRotationActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISnapshotModeActionsWithRotationActions instance)
        {
            foreach (var item in m_Wrapper.m_SnapshotModeActionsWithRotationActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SnapshotModeActionsWithRotationActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SnapshotModeActionsWithRotationActions @SnapshotModeActionsWithRotation => new SnapshotModeActionsWithRotationActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Start;
    public struct UIActions
    {
        private @PlayerControls m_Wrapper;
        public UIActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Start => m_Wrapper.m_UI_Start;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Start.started += instance.OnStart;
            @Start.performed += instance.OnStart;
            @Start.canceled += instance.OnStart;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Start.started -= instance.OnStart;
            @Start.performed -= instance.OnStart;
            @Start.canceled -= instance.OnStart;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface INormalActionsActions
    {
        void OnPlayerMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnRestartLevel(InputAction.CallbackContext context);
    }
    public interface INormalActionsWithCameraActions
    {
        void OnPlayerMoveC(InputAction.CallbackContext context);
        void OnJumpC(InputAction.CallbackContext context);
        void OnEnterScreenshotMode(InputAction.CallbackContext context);
        void OnRestartC(InputAction.CallbackContext context);
    }
    public interface ISnapshotModeActionsActions
    {
        void OnSnapshotActionButton(InputAction.CallbackContext context);
        void OnSnapshotFrameMove(InputAction.CallbackContext context);
        void OnExitScreenshotMode(InputAction.CallbackContext context);
    }
    public interface ISnapshotModeActionsWithRotationActions
    {
        void OnSnapshotActionButton(InputAction.CallbackContext context);
        void OnSnapshotFrameMove(InputAction.CallbackContext context);
        void OnExitScreenshotMode(InputAction.CallbackContext context);
        void OnRotateLeft(InputAction.CallbackContext context);
        void OnRotateRight(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnStart(InputAction.CallbackContext context);
    }
}
